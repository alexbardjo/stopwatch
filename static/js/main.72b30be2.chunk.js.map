{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","time","setTime","timerOn","setTimerOn","arrDate","setArrDate","useEffect","interval","setInterval","prevTime","clearInterval","className","Math","floor","slice","onClick","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAiEeA,MA7Df,WAEI,MAAwBC,IAAMC,SAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BH,IAAMC,UAAS,GAA7C,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,IAAMC,SAAS,GAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KAoCA,OAjCFP,IAAMQ,WAAU,WACV,IAAIC,EAAW,KASjB,OAPML,EACAK,EAAWC,aAAY,WACnBP,GAAQ,SAAAQ,GAAQ,OAAIA,EAAW,QAChC,IAEHC,cAAcH,GAEb,kBAAMG,cAAcH,MAG1B,CAACL,IAqBA,sBAAKS,UAAU,UAAf,UACI,qBAAIA,UAAU,OAAd,UACI,oBAAIA,UAAU,aAAd,UAA6B,IAAMC,KAAKC,MAAQb,EAAO,KAAW,KAAMc,OAAO,KAC/E,oBAAIH,UAAU,aAAd,UAA6B,IAAMC,KAAKC,MAAQb,EAAO,IAAS,KAAMc,OAAO,KAC7E,oBAAIH,UAAU,aAAd,UAA6B,IAAMC,KAAKC,MAAQb,EAAO,IAAQ,KAAMc,OAAO,QAEhF,sBAAKH,UAAU,UAAf,WACMT,GACE,wBAAQS,UAAU,mCAAmCI,QAAS,kBAAMZ,GAAW,IAA/E,mBAEHD,GACG,wBAAQS,UAAU,iCAAiCI,QA9BhD,WACjBZ,GAAW,GACXF,EAAQ,IA4BM,kBAEI,wBAAQU,UAAU,oCAAoCI,QAtBtD,WACpBV,EAAWW,KAAKC,OACDD,KAAKC,MAAQb,EACf,KACTD,GAAW,IAkBK,kBACA,wBAAQQ,UAAU,kCAAkCI,QA5BpD,WAClBZ,GAAW,GACTF,EAAQ,IA0BQ,0BCvDxBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.72b30be2.chunk.js","sourcesContent":["import React from 'react';\nimport './scss/App.scss';\n\n\nfunction App() {\n\n    const [time, setTime] = React.useState(0);\n    const [timerOn, setTimerOn] = React.useState(false);\n    const [arrDate, setArrDate] = React.useState(0);\n\n\n  React.useEffect(() => {\n        let interval = null;\n\n        if (timerOn) {\n            interval = setInterval(() => {\n                setTime(prevTime => prevTime + 10);\n            }, 10);\n        } else {\n            clearInterval(interval)\n        }\n      return () => clearInterval(interval);\n\n\n    }, [timerOn]);\n\n    const onStopClick =() => {\n      setTimerOn(false);\n      setTime(0)\n    };\n\n    const onResetClick =() => {\n      setTimerOn(true);\n        setTime(0)\n    };\n\n  const onDoubleClick = () => {\n    setArrDate(Date.now());\n      const diff = Date.now() - arrDate;\n      if (diff < 300) {\n        setTimerOn(false);\n    }\n  };\n\n    return (\n        <div className=\"wrapper\">\n            <ul className=\"time\">\n                <li className=\"time__elem\">{(\"0\" + Math.floor(((time / 3600000) % 60))).slice(-2)}</li>\n                <li className=\"time__elem\">{(\"0\" + Math.floor(((time / 60000) % 60))).slice(-2)}</li>\n                <li className=\"time__elem\">{(\"0\" + Math.floor(((time / 1000) % 60))).slice(-2)}</li>\n            </ul>\n            <div className=\"buttons\">\n                {!timerOn  && (\n                    <button className=\"buttons__btn buttons__btn--green\" onClick={() => setTimerOn(true)}>Start</button>\n                )}\n                {timerOn && (\n                    <button className=\"buttons__btn buttons__btn--red\" onClick={onStopClick}>Stop</button>\n                )}\n                        <button className=\"buttons__btn buttons__btn--yellow\" onClick={onDoubleClick}>wait</button>\n                        <button className=\"buttons__btn buttons__btn--grey\" onClick={onResetClick}>Reset</button>\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}